<?php
// $Id$

/**
 * @file
 * Install, update and uninstall functions for the wic_pub module
 */

/**
 * Implements hook_install()
 */
function wic_pub_install() {
  // Enable node publishing for publications.
  variable_set('node_options_wic_pub', array('status'));
	// Disable comments for the publication node type.
	variable_set("comment_wic_pub", 1);
}

/**
 * Implements hook_enable()
 */
function wic_pub_enable() {
	// Create the order form terms vocabulary.
  if (!($vocabulary = taxonomy_vocabulary_machine_name_load('wic_pub_of'))) {
    // Create the vocabulary.
		$vocabulary = new stdClass();
		$vocabulary->name = 'Publication order form terms';
		$vocabulary->machine_name = 'wic_pub_of';
		$vocabulary->description = 'Categories of WIC publications.  Tagged terms determine placement in the publication order form.  Top-level terms define separate pages in the multi-step form.  Second-level terms define headings within those form pages.';
		taxonomy_vocabulary_save($vocabulary);
  }
	// Cache the vid as a variable to speed search form generation.
	variable_set('wic_pub_of_vid', $vocabulary->vid);

  // Add a taxonomy term reference field.
  if (!field_info_field('wic_pub_term_ref_of')) {
  	field_create_field(_wic_pub_term_ref_settings('field'));
	}
	field_create_instance(_wic_pub_term_ref_settings('instance'));
}

/**
 * Implements hook_disable()
function wic_pub_disable() {
}
 */

/**
 * Implements hook_uninstall()
 */
function wic_pub_uninstall() {
  // Delete the module config variables.
  variable_del('wic_pub_of_vid');
}

/**
 * Implements hook_schema()
 */
function wic_pub_schema() {
  $schema['wic_pub'] = array(
    'description' => 'A table containing a list of WIC publications',
    'fields' => array(
      'nid' => array(
        'description' => 'The node ID for a WIC publication',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
			'order_number' => array(
			  'description' => 'The order number of the publication',
				'type' => 'varchar',
				'length' => 10,
				'not null' => FALSE,
				'default' => '',
			),
			'description' => array(
        'description' => 'Information about the best practice',
        'type' => 'varchar',
				'length' => 255,
        'not null' => TRUE,
		  ),
			'in_stock' => array(
		    'description' => 'Whether the publication is in stock: 0 = no, 1 = yes',
				'type' => 'int',
				'size' => 'tiny',
				'not null' => TRUE,
				'default' => 1,
			),
			'quantity_max' => array(
			  'description' => 'The maximum value that can be entered in the order form quantity field',
				'type' => 'int',
				'size' => 'tiny',
				'not null' => FALSE,
			),
		),
    'primary key' => array('nid'),
  );
  return $schema;
}

function _wic_pub_term_ref_settings($type) {
	switch ($type) {
		case 'field':
			return array(
				'field_name' => 'wic_pub_term_ref_of',
				'type' => 'taxonomy_term_reference',
				'cardinality' => 1,
				'settings' => array(
					'allowed_values' => array(
						array(
							'vocabulary' => 'wic_pub_of',
							'parent' => 0,
						),
					),
				),
			);
		case 'instance':
			return array(
				'field_name' => 'wic_pub_term_ref_of',
				'entity_type' => 'node',
				'label' => t('Order form category'),
				'description' => t("The tagged term determines the publication's placement in the order form."),
				'bundle' => 'wic_pub',
				'required' => TRUE,
				'widget' => array(
					'type' => 'options_select',
					'weight' => 4,
				),
				'display' => array(
					'default' => array('type' => 'taxonomy_term_reference_link'),
					'teaser' => array('type' => 'hidden'),
				),
			);
	}
}